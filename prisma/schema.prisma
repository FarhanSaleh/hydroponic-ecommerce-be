// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  name          String
  password      String
  phone_number  String
  address       String
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  stores        Store[]
  orders        Order[]
}

model Store {
  id            Int      @id @default(autoincrement())
  name          String
  address       String
  description   String
  phone_number  String
  user          User     @relation(fields: [user_id], references: [id])
  user_id       Int      @unique
  items         Item[]
  orders        Order[]
}

model Item {
  id            Int      @id @default(autoincrement())
  name          String
  description   String
  price         Float
  stock         Int
  image_url     String
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  store         Store    @relation(fields: [store_id], references: [id])
  store_id      Int
  OrderDetails  OrderDetail[]
}

model Order {
  id            Int         @id @default(autoincrement())
  total_price   Int
  status        OrderStatus @default(PROCESSING)
  created_at    DateTime    @default(now())
  updated_at    DateTime    @updatedAt
  store         Store       @relation(fields: [store_id], references: [id])
  store_id      Int
  user          User        @relation(fields: [user_id], references: [id])
  user_id       Int
  OrderDetails  OrderDetail[]
}

model OrderDetail {
  id             Int      @id @default(autoincrement())
  amount         Int
  price_at_order Int
  item           Item     @relation(fields: [item_id], references: [id])
  item_id        Int
  order          Order    @relation(fields: [order_id], references: [id])
  order_id       Int
}

enum OrderStatus {
  PROCESSING
  COMPLETED
  CANCELLED
  SHIPPED
}
